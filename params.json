{"name":"Helm","tagline":"Emacs incremental completion and selection narrowing framework","body":"```\r\n _____                            _   _      _\r\n| ____|_ __ ___   __ _  ___ ___  | | | | ___| |_ __ ___\r\n|  _| | '_ ` _ \\ / _` |/ __/ __| | |_| |/ _ \\ | '_ ` _ \\\r\n| |___| | | | | | (_| | (__\\__ \\ |  _  |  __/ | | | | | |\r\n|_____|_| |_| |_|\\__,_|\\___|___/ |_| |_|\\___|_|_| |_| |_|\r\n```\r\n\r\n## Abstract\r\n\r\n`Helm` is incremental completion and selection narrowing framework for\r\nEmacs. It will help steer you in the right direction when you're looking\r\nfor stuff in Emacs (like buffers, files, etc).\r\n\r\nHelm is a fork of `anything.el` originaly written by Tamas Patrovic\r\nand can be considered to be its successor. \r\n`Helm` sets out to clean up the legacy code in `anything.el`\r\nand provide a cleaner, leaner and more modular tool, that's not tied in\r\nthe trap of backward compatibility. \r\n\r\n## Requirements\r\n\r\nYou need a recent Emacs to use latest helm, at least Emacs-24.3.\r\n\r\n[async](https://github.com/jwiegley/emacs-async) will be installed as dependency\r\nwhen installing from melpa but is facultative when installing from git (recommended though\r\nas it may fix installation of all packages from (m)elpa and will allow you to\r\ncopy/rename asynchronously your files from helm and/or dired if needed).\r\n\r\n## Getting Started\r\n\r\n### Quick install from git\r\n\r\n  1. Clone the `helm` repository to some directory:\r\n  \r\n    ```elisp\r\n    $ git clone https://github.com/emacs-helm/helm.git /path/to/helm/directory\r\n    ```\r\n\r\n  2. Clone the `async` repository to some directory (facultative)\r\n\r\n    ```elisp\r\n    $ git clone git@github.com:jwiegley/emacs-async.git /path/to/async/directory\r\n    ```\r\n  3. Run `make` from the `helm` directory.\r\n  \r\n  3. Add to `.emacs.el` (or equivalent):\r\n\r\n    ```elisp\r\n    ;; [Facultative] Only if you have installed async.\r\n    (add-to-list 'load-path \"/path/to/async/directory\")\r\n    \r\n    (add-to-list 'load-path \"/path/to/helm/directory\")\r\n    (require 'helm-config)\r\n    ```\r\n    \r\n_NOTE:_ Installing helm like this (i.e from git+make) is the safest way.\r\n\r\nYou can have a quick try to `helm` by launching from the helm directory:\r\n\r\n`./emacs-helm.sh`\r\n\r\nIt is also recommended to use this when reporting bug.\r\n\r\n_NOTE:_ That this will not work on Windows systems.\r\n\r\n### Install from Emacs packaging system\r\n\r\nHelm is now available on Melpa at `http://melpa.milkbox.net/`\r\nYou will find there instructions to install.\r\nThen you should need only in your init file:\r\n\r\n```elisp\r\n(require 'helm-config)\r\n```\r\n\r\n_WARNING:_ Due to a bad concept of package.el which is in charge of fetching helm files\r\nand compiling them, users had errors most of the time when upgrading from melpa and `list-package`.\r\nTo avoid this [Async](https://github.com/jwiegley/emacs-async) have been added as dependency to\r\nhelm to force package.el compiling its files in a clean environment.\r\nPeople installing from git and using the make file will not suffer from this problem and don't need\r\n[Async](https://github.com/jwiegley/emacs-async) though it is recommended as it fix installation\r\nof all other packages you may install with package.el from (m)elpa.\r\nSee [FAQ](https://github.com/emacs-helm/helm/wiki#faq) for more infos.\r\n\r\n_Note:_ After upgrading from the emacs packaging system you should restart emacs for the changes take effect.\r\n\r\n**Note to Linux Distributions Maintainers**\r\n\r\n`Only the extensions present in the github emacs-helm organisation are supported.`\r\n\r\n### Alternate install warning\r\n\r\nSome people are installing `helm` with their own config using diverses `require`, `autoload`\r\nand other hacks, not using `helm-config`.\r\nExpect failures and slowdown at startup unless you really know what you are doing when you do so.\r\n\r\n### Emacs Prelude\r\n\r\nIf you're afraid to play with Emacs's configuration, but want to try\r\nout Helm - have NO FEAR. Have a look at\r\n[Emacs Prelude](https://github.com/bbatsov/prelude) - it has\r\nHelm built-in and properly set-up.\r\n\r\n### Basic usage\r\n\r\nJust type `M-x helm-mini` and enjoy. You might want to bind that command to\r\na keyboard shortcut. Here's a suggestion:\r\n\r\n```elisp\r\n(global-set-key (kbd \"C-c h\") 'helm-mini)\r\n```\r\nYou can also start with `M-x helm-mode` and enjoy helm completion in your favourites\r\nEmacs commands (e.g `M-x`, `C-x C-f`, etc...).\r\nYou can enable this by adding in your init file:\r\n\r\n```elisp\r\n(helm-mode 1)\r\n```\r\n\r\nAs a startup point you can also look at the helm section in Emacs menu to\r\ndiscover some of the commands provided by helm.\r\n\r\n### Advanced usage\r\n\r\nHelm is capable of a lot. Here is a demo of `helm-buffers-list`:\r\n\r\n![helm-buffers-list](images/helm-buffers-list.gif)\r\n\r\nThe demo starts when you see `Eval: START` in the minibuffer.\r\n\r\n- All the C buffers are selected using the regexp `*C`. In the demo, I also select Tcl buffers with `*Tcl` and then switched back to C buffers with `*C`.\r\n- I only want to have buffers that contains only the string \"crash\". To do that, I add a space, then add the pattern `@crash`.\r\n- After the initial search pattern, I hand over the current matching buffers to `helm-moccur` - `moccur` with Helm interface. In the above demo, I only switch to one file, that is `kexec.c`. However, you can select multiple buffers with `C-SPC` or select all buffers with `M-a`.\r\n- Candidates can be filtered gradually by adding more pattern, i.e. I added `memory` to filtered down to buffers that contain the string \"memory\" among the buffers that are containing \"crash\".\r\n\r\nAs you can see, as you filtered out, the number of candidates decreases, as displayed in the modeline. At the end, there were 12 buffers remained as the result of filtering, down from the total 253 buffers.\r\n\r\nYou can read [this guide](http://tuhdo.github.io/helm-intro.html) to quickly get started with Helm.\r\n\r\nYou can find all the gory details on the [Helm Wiki](https://github.com/emacs-helm/helm/wiki).\r\n\r\n## Known issues\r\n\r\nCheck out the project's\r\n[issue list](https://github.com/emacs-helm/helm/issues?sort=created&direction=desc&state=open)\r\na list of unresolved issues. By the way - feel free to fix any of them\r\nand sent us a pull request. :-)\r\n\r\n## Contributors\r\n\r\nHere's a [list](https://github.com/emacs-helm/helm/contributors) of all the people who have contributed to the\r\ndevelopment of Helm.\r\n\r\n## Bugs & Improvements\r\n\r\nBug reports and suggestions for improvements are always\r\nwelcome, be sure though they are related to helm, many bugs are coming from emacs itself\r\nor other packages. GitHub pull requests are even better! :-)\r\n\r\nNOTE: When trying if something is working or not, be sure to start helm from `Emacs -Q` or even better\r\nStart it from your helm directory with `./emacs-helm.sh`.\r\n\r\n## Getting help\r\n\r\nIf [Helm Wiki](https://github.com/emacs-helm/helm/wiki) is not enough, you can ask for help\r\non [emacs-helm google group](https://groups.google.com/group/emacs-helm?hl=en).\r\n\r\n\r\nCheers,<br>\r\nThe Helm Team\r\n\r\n","google":"UA-54420623-1","note":"Don't delete this file! It's used internally to help with page regeneration."}