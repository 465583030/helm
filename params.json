{
  "name": "Helm",
  "tagline": "Emacs incremental completion and selection narrowing framework",
  "body": "<p><a href=\"http://www.gnu.org/licenses/gpl-3.0.txt\"><img src=\"https://img.shields.io/badge/license-GPL_3-green.svg\" alt=\"License GPL 3\" /></a>\r\n<a href=\"https://melpa.org/#/helm\"><img alt=\"MELPA\" src=\"https://melpa.org/packages/helm-badge.svg\"/></a>\r\n<a href=\"https://stable.melpa.org/#/helm\"><img alt=\"MELPA Stable\" src=\"https://stable.melpa.org/packages/helm-badge.svg\"/></a></p>\r\n\r\n<h1>Emacs-helm</h1>\r\n\r\n<p><img src=\"https://avatars3.githubusercontent.com/u/1541688?v=3&amp;s=200\" alt=\"Emacs-helm\" title=\"\" /></p>\r\n\r\n<p>Maintainance of Helm is a lot of work that I do freely on my sparse time,</p> \r\n<p>please <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=thierry.volpiatto@gmail.com&amp;lc=US&amp;currency_code=EUR&amp;bn=PP-DonationsBF:btn_donateCC_LG.gif:NonHosted\"><img src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" alt=\"Donate\" title=\"\" /></a> to help this project, </p> \r\nor [![Support via Gratipay](https://cdn.rawgit.com/gratipay/gratipay-badge/2.3.0/dist/gratipay.png)](https://gratipay.com/emacs-helm/).\r\n\r\n\r\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\r\n**Table of Contents**\r\n\r\n- [Introduction](#introduction)\r\n- [Requirements](#requirements)\r\n- [Getting Started](#getting-started)\r\n    - [Quick install from git](#quick-install-from-git)\r\n    - [Install from Emacs packaging system](#install-from-emacs-packaging-system)\r\n    - [Debian and Ubuntu](#debian-and-ubuntu)\r\n    - [Installing just the helm-core package](#installing-just-the-helm-core-package)\r\n    - [Warning about alternate installation methods](#warning-about-alternate-installation-methods)\r\n    - [Configuration](#configuration)\r\n    - [Basic usage](#basic-usage)\r\n    - [Advanced usage](#advanced-usage)\r\n        - [Matching methods](#matching-methods)\r\n        - [Creating custom helm sources](#creating-custom-helm-sources)\r\n- [Helm Applications](#helm-applications)\r\n- [Recommended Helm extensions](#recommended-helm-extensions)\r\n- [Known issues](#known-issues)\r\n- [Contributors](#contributors)\r\n- [Bugs & Improvements](#bugs--improvements)\r\n- [Getting help](#getting-help)\r\n\r\n<!-- markdown-toc end -->\r\n\r\n# Introduction\r\n\r\n`Helm` is an Emacs framework for incremental completions and narrowing\r\nselections. It helps to rapidly complete file names, buffer names, or\r\nany other Emacs interactions requiring selecting an item from a list of\r\npossible choices.\r\n\r\nHelm is a fork of `anything.el`, which was originally written by Tamas\r\nPatrovic and can be considered to be its successor. `Helm` cleans the\r\nlegacy code that is leaner, modular, and unchained from constraints of\r\nbackward compatibility.\r\n\r\n# Requirements\r\n\r\nHelm requires Emacs-24.4 or later versions.\r\n\r\nHelm installs [async](https://github.com/jwiegley/emacs-async) package as a dependency\r\nwhen Helm is installed using MELPA. \r\n\r\nHelm installation from the git source repository does not include\r\nasync. The async package is recommended for smooth asynchronous file\r\nand dired operations in Helm.\r\n\r\n# Getting Started\r\n\r\n## Quick install from git\r\n\r\n  1. Clone the `helm` repository to some directory:\r\n  \r\n    ```elisp\r\n    $ git clone https://github.com/emacs-helm/helm.git /path/to/helm/directory\r\n    ```\r\n\r\n  2. Clone the `async` repository to some directory (facultative)\r\n\r\n    ```elisp\r\n    $ git clone https://github.com/jwiegley/emacs-async.git /path/to/async/directory\r\n    ```\r\n  3. Run `make` from the `helm` directory.\r\n  \r\n  3. Add to `.emacs.el` (or equivalent):\r\n\r\n    ```elisp\r\n    ;; If async is installed\r\n    (add-to-list 'load-path \"/path/to/async/directory\")\r\n    \r\n    (add-to-list 'load-path \"/path/to/helm/directory\")\r\n    (require 'helm-config)\r\n    ```\r\n    \r\n_NOTE:_ Installing helm using git and make is the safest way.\r\n\r\nTo quickly run `helm`, launch this script from helm directory:\r\n\r\n`./emacs-helm.sh`\r\n\r\nAlso use the same script above for bug reporting.\r\n\r\n_NOTE:_ This script does not work on Windows systems.\r\n\r\n## Install from Emacs packaging system\r\n\r\nHelm can also be installed from MELPA repository at http://melpa.org/.\r\nYou will find the instructions to install packages from MELPA [here](https://github.com/melpa/melpa#usage).\r\n\r\nNo further configuration is necessary to run helm other than perhaps a\r\none-line entry in the Emacs init file:\r\n\r\n```elisp\r\n(require 'helm-config)\r\n```\r\n\r\n_WARNING:_ Helm upgrades from MELPA repository encountered errors\r\nbecause of the way package.el fetched and compiled updates for\r\nexisting packages. To get around these errors, Helm adds\r\n[Async](https://github.com/jwiegley/emacs-async) as a dependency\r\npackage install. Async forces compilation in a clean environment,\r\nwhich solves those compilation errors. Since async has other benefits\r\nas well, both for Helm and other packages, we recommend installing\r\nasync even for Helm installs using git. See\r\n[FAQ](https://github.com/emacs-helm/helm/wiki#faq) for details.\r\n\r\n_Note:_ Restart Emacs for Helm updates from MELPA repositories to take\r\neffect.\r\n\r\n**Note to Linux Distributions Maintainers**\r\n\r\n`Only the extensions in the github emacs-helm repository are supported.`\r\n\r\n## Debian and Ubuntu\r\n\r\nUsers of Debian 9 or later or Ubuntu 16.04 or later may simply\r\n`apt-get install elpa-helm` (or `apt-get install elpa-helm-core`; see\r\nbelow).\r\n\r\n## Installing just the helm-core package\r\n\r\n`helm-core` package is available on [MELPA](http://melpa.org/) for\r\nthird party packages that depend on helm libraries. These packages\r\nshould require helm as follows:\r\n\r\n     (require 'helm)\r\n\r\nRequiring helm builds and runs helm code necessary for multiple regexp\r\nand fuzzy matching. See\r\n[helm wiki](https://github.com/emacs-helm/helm/wiki#developpingusinghelmframework)\r\nfor details.\r\n\r\n## Warning about alternate installation methods\r\n    \r\nInstallation methods that circumvent `helm-config` are known to fail\r\nif the careful safeguards are not implemented in the hacks. \r\n\r\n## Configuration\r\n\r\nFor minimal helm configuration, run the start-up script `./emacs-helm.sh`\r\nand then see the file `/tmp/helm-cfg.el`.\r\n\r\nThe full configuration I (the helm maintainer) use is\r\n[here](https://github.com/thierryvolpiatto/emacs-tv-config/blob/master/init-helm-thierry.el).\r\n\r\nAlso see helm customizable variables with the customize interface.\r\n\r\nEnabling `helm-mode` will enable helm for many features of emacs\r\nrequiring completions, see below how to enable `helm-mode`.\r\n\r\n## Basic usage\r\n\r\n`M-x helm-M-x RET helm-` lists helm commands ready for narrowing and selecting.\r\n\r\nTo bind to `M-x`: \r\n\r\n`(global-set-key (kbd \"M-x\") 'helm-M-x)`\r\n\r\n- _IMPORTANT:_\r\n\r\nIn any helm session (after `helm-M-x` or `helm-` command)\r\n\r\n`C-h m` pops a general info buffer about helm\r\n\r\n`C-c ?` pops a special info buffer of the current helm command\r\n\r\nNot all helm commands have specialized info buffers. Look for `C-c ?`\r\nin the mode-line. `C-h m` is shown for any command that does not have\r\na specialized info buffer.\r\n\r\nUse these embedded Info screens first before reporting bugs.\r\n\r\n`M-x helm-mode` to enable helm completion for common Emacs commands\r\n(e.g `M-x`, `C-x C-f`, etc...). Note that the helm functionality\r\nenabled through helm-mode comes from a generic implementation and does\r\nnot include all helm features available through equivalent\r\nhelm-specific commands. For example, `helm-M-x` has more features than\r\nhelm completion through `M-x`.\r\n\r\nTo make helm-mode start with Emacs init file: \r\n\r\n```elisp\r\n(helm-mode 1)\r\n```\r\n\r\nTo discover helm commands, look at helm menu item in Emacs menu. \r\n\r\nAnother way to discover helm commands: run the shell script:\r\n`./emacs-helm.sh` and then look in the scratch buffer. `emacs-helm.sh`\r\naccepts emacs command line options. `emacs-helm.sh -h` opens an Info\r\nscreen with more details.\r\n\r\n## Advanced usage\r\n\r\nHelm contains many features, some of which are easier to follow\r\nvisually. Here is a demo of `helm-buffers-list` used with\r\n`helm-moccur`. Demo starts with `Eval: START` in the minibuffer.\r\n\r\n![helm-buffers-list](images/helm-buffers-list.gif)\r\n\r\n- Regexp `*C` selects the C buffers. `*Tcl` in the demo selects TCL\r\n  buffers, then with `*C` switches back to C buffers.\r\n- For buffers containing the string \"crash\", the demo adds a space,\r\n  then the pattern `@crash`.\r\n- Matching buffers are then handed over to `helm-moccur` - `moccur`\r\n  with its own Helm interface. The demo shows switching to a\r\n  single file, `kexec.c`. Multiple selections can be made with\r\n  `C-SPC`. `M-a` selects all.\r\n- Adding characters to the pattern gradually filters (narrows) the\r\n  available candidates. By adding `memory`, the buffers shown now\r\n  include those buffers with \"crash\" and \"memory\".\r\n\r\nWith more pattern matching, candidates are narrowed down from the\r\ninitial 253 buffers to 12 as shown in the modeline. \r\n\r\nHelm [guide](http://tuhdo.github.io/helm-intro.html) and\r\n[Helm Wiki](https://github.com/emacs-helm/helm/wiki) provide\r\nadditional details.\r\n\r\n### Matching methods\r\n\r\nHelm support by default multi pattern matching, it is the standard way\r\nof matching in helm.\r\nE.g You can use a pattern like \"foo bar\" to match a line containing \"foo\" and \"bar\"\r\nor \"bar\" and \"foo\".\r\nEach pattern can be a regexp.\r\n\r\nIn addition helm support [fuzzy matching](https://github.com/emacs-helm/helm/wiki/Fuzzy-matching).\r\n\r\n### Creating custom helm sources\r\n\r\nAn example:\r\n\r\n```elisp\r\n\r\n(helm :sources (helm-build-sync-source \"test\"\r\n                 :candidates '(foo foa fob bar baz)\r\n                 :fuzzy-match t)\r\n      :buffer \"*helm test*\")\r\n```\r\n\r\nThe candidates list may be replaced by a function that produces a list.\r\nSee ([helm wiki](https://github.com/emacs-helm/helm/wiki#25-developing-using-helm-framework))\r\nfor details.\r\n\r\n# Helm Applications \r\n\r\nThese are popular applications developed using helm completion and\r\nnarrowing framework. They are available for individual installs\r\nthrough the Emacs package manager. This list is not exhaustive.\r\n\r\n- `helm-mode`: turns on helm completions for most standard emacs\r\n  completions. Helm provides even more optimized helm completions for\r\n  some commands in helm-mode. Prefer these natively optimized versions\r\n  over the ones in helm-mode.\r\n  \r\n- `helm-find-files`: one command that handles all the files related\r\n  commands (bind to `C-x C-f`).\r\n  \r\n- `helm-buffers-list`: provides enhanced buffers listing.\r\n\r\n- `helm-browse-project`: handles project files and buffers; defaults\r\n   to current directory; works with `helm-find-files`; recommended\r\n   with [helm-ls-git](https://github.com/emacs-helm/helm-ls-git),\r\n   [helm-ls-hg](https://github.com/emacs-helm/helm-ls-hg) and\r\n   `helm-ls-svn` for a better handling of version control files.\r\n   Each time a project under version control is visited it is added\r\n   to `helm-browse-project-history` and can be visted with `helm-projects-history`.\r\n   \r\n- `helm-dabbrev`: enhanced dabbrev implementation with helm\r\n  completion; does not use emacs code.\r\n  \r\n- `helm-moccur`: enhanced occur for one or more buffers; launch from\r\n  `helm-buffers-list` or `current-buffer`.\r\n  \r\n- `helm-M-x`: enhanced `execute-extended-command` (bind it to `M-x`).\r\n\r\n- `helm-imenu` and `helm-imenu-in-all-buffers`: provide imenus for\r\n  current or all buffers.\r\n  \r\n- `helm-etags-select`: enhanced etags with helm-completion; usable\r\n  everywhere with `helm-find-files`.\r\n  \r\n- `helm-apropos`: enhanced apropos for functions and variables that\r\n  `C-h` commands provide.\r\n  \r\n- `Grep`: launch from any helm file commands; supports back-ends\r\n  `grep`, `ack-grep`, `git-grep`, `ag` and custom implementation of\r\n  `pt`.\r\n  \r\n- `helm-gid`: Helm interface for `gid` from\r\n  [id-utils](https://www.gnu.org/software/idutils/).\r\n  \r\n- `helm-show-kill-ring`: A helm browser for kill ring.\r\n\r\n- `helm-all-mark-rings`: A helm browser for mark ring; retrieves last positions in buffers.\r\n\r\n- `helm-filtered-bookmarks`: enhanced browser for bookmarks.\r\n\r\n- `helm-list-elisp-packages`: enhanced browser for elisp package management.\r\n\r\n# Recommended Helm extensions\r\n\r\n- [helm-ls-git](https://github.com/emacs-helm/helm-ls-git)\r\n- [helm-ls-hg](https://github.com/emacs-helm/helm-ls-hg)\r\n- [helm-descbinds](https://github.com/emacs-helm/helm-descbinds)\r\n- [helm-firefox](https://github.com/emacs-helm/helm-firefox)\r\n\r\n**Warning** Helm development has sparked quite a few extensions, many\r\nof which duplicate features already included in helm. Some of these\r\npackages (about 20 at last count in the MELPA repository) are either\r\ndeprecated or unmaintained. Moreover, many remain out-of-sync with\r\n`helm` core development cycles causing incompatibilities. To avoid\r\nhelm problems or unstable emacs, please look for comparable features\r\nwithin [helm](https://github.com/emacs-helm/helm) and\r\n[emacs-helm](https://github.com/emacs-helm) before installing such\r\nextensions.\r\n\r\n# Known issues\r\n\r\nThe Helm project has a current unresolved \r\n[issue list](https://github.com/emacs-helm/helm/issues?sort=created&direction=desc&state=open).\r\nPlease feel free to fix any of them; send a pull request.\r\n\r\n# Contributors\r\n\r\nThe Helm project maintains a\r\n[list](https://github.com/emacs-helm/helm/contributors) of\r\ncontributors.\r\n\r\n# Bugs & Improvements\r\n\r\nThe Helm Team welcomes bug reports and suggestions. Note that not all\r\nbugs when using Helm are due to Helm. Because of the way Helm\r\ninteracts with many Emacs features, bugs may be related to Emacs\r\nitself.\r\n\r\nOne way to ascertain that the bugs are helm-related, recreate the\r\nerror either by using `Emacs -Q` or by running the included package\r\nscript `./emacs-helm.sh` located in the helm directory.\r\n\r\n# Getting help\r\n\r\n[Helm Wiki](https://github.com/emacs-helm/helm/wiki) and\r\n[emacs-helm Google group](https://groups.google.com/group/emacs-helm?hl=en)\r\nare two readily available locations.\r\n\r\nCheers,<br>\r\nThe Helm Team\r\n\r\n[badge-license]: https://img.shields.io/badge/license-GPL_3-green.svg\r\n",
  "google": "UA-54420623-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}